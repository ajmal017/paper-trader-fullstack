[{"/home/leungjch/Documents/uw/repos/paper-trader/client/src/index.js":"1","/home/leungjch/Documents/uw/repos/paper-trader/client/src/App.js":"2","/home/leungjch/Documents/uw/repos/paper-trader/client/src/reportWebVitals.js":"3","/home/leungjch/Documents/uw/repos/paper-trader/client/src/pages/LoginPage.js":"4","/home/leungjch/Documents/uw/repos/paper-trader/client/src/pages/PortfolioPage.js":"5","/home/leungjch/Documents/uw/repos/paper-trader/client/src/UserContext.js":"6","/home/leungjch/Documents/uw/repos/paper-trader/client/src/pages/HistoryPage.js":"7","/home/leungjch/Documents/uw/repos/paper-trader/client/src/pages/BuyPage.js":"8"},{"size":500,"mtime":1608867010145,"results":"9","hashOfConfig":"10"},{"size":1912,"mtime":1609007131755,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1608867010145,"results":"12","hashOfConfig":"10"},{"size":2893,"mtime":1609006897872,"results":"13","hashOfConfig":"10"},{"size":1891,"mtime":1609005475102,"results":"14","hashOfConfig":"10"},{"size":735,"mtime":1609005095177,"results":"15","hashOfConfig":"10"},{"size":1708,"mtime":1609006128748,"results":"16","hashOfConfig":"10"},{"size":1261,"mtime":1609012742539,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"pb2wml",{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"20"},"/home/leungjch/Documents/uw/repos/paper-trader/client/src/index.js",[],["41","42"],"/home/leungjch/Documents/uw/repos/paper-trader/client/src/App.js",["43","44","45"],"import React, { useContext } from \"react\";\nimport { Button, Form } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { UserContext, UserProvider } from './UserContext';\n\nimport { LoginPage } from './pages/LoginPage'\nimport { PortfolioPage } from './pages/PortfolioPage'\nimport { HistoryPage } from './pages/HistoryPage'\nimport { BuyPage } from './pages/BuyPage'\n\n\nexport default function App() {\n\n  const { user } = useContext(UserContext);\n\n  return (\n    <UserProvider>\n      <Router>\n        <div>\n          <nav>\n            <ul>\n              {/* <li>\n              <Link to=\"/login\">Login</Link>\n            </li> */}\n              <li>\n                <Link to=\"/portfolio\">Portfolio</Link>\n              </li>\n              <li>\n                <Link to=\"/buy\">Buy</Link>\n              </li>\n              <li>\n                <Link to=\"/sell\">Sell</Link>\n              </li>\n              <li>\n                <Link to=\"/history\">Transaction History</Link>\n              </li>\n            </ul>\n          </nav>\n\n          <Routes>\n            <Route path=\"/login\" element={<LoginPage />} />\n            <Route path=\"/portfolio\" element={<PortfolioPage />} />\n            <Route path=\"/buy\" element={<BuyPage />} />\n            <Route path=\"/sell\" element={<SellPage />} />\n            <Route path=\"/history\" element={<HistoryPage />} />\n            <Route path=\"/\" element={<LoginPage />} />\n          </Routes>\n        </div>\n      </Router>\n    </UserProvider>\n\n  );\n}\n\n// function LoginPage() {\n//   return <h2>Login</h2>;\n// }\n\n// function PortfolioPage() {\n//   return <h2>Your Portfolio</h2>;\n// }\n\n// function BuyPage() {\n//   return <h2>Buy</h2>;\n// }\n\nfunction SellPage() {\n  return <h2>Sell</h2>;\n}\n\n// function HistoryPage() {\n//   return <h2>Transaction History</h2>;\n// }\n","/home/leungjch/Documents/uw/repos/paper-trader/client/src/reportWebVitals.js",[],"/home/leungjch/Documents/uw/repos/paper-trader/client/src/pages/LoginPage.js",["46","47","48","49"],"import React, { useState, useContext } from \"react\";\nimport { Button, ButtonGroup, Form } from 'react-bootstrap';\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { UserContext } from '../UserContext';\n\n\nfunction LoginPage() {\n  \n  const { login } = useContext(UserContext);\n\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  \n    // Router navigator\n  const navigate = useNavigate();\n\n  function getUser() {\n    console.log(\"Client: Getuser request\");\n    fetch('/api/users')\n      .then((response) => response.json())\n      .then((data) => console.log(\"Client: Received getuser data\", data));\n  }\n\n  // Logic for handling authentication\n  function verifyUser() {\n    console.log(\"User request is\", \"/api/users/\" + username)\n    fetch('/api/users/' + username)\n    .then((response) => response.json())\n    .then((data) => {\n      console.log(\"Client: Received request data\", data);\n      // Usernames must be unique\n      if (data.length == 1 && data[0]['hash_password'] == password) {\n\n        // User is authenticated\n        console.log(\"User authenticated!\")\n        login(username, data[0]['id']);\n\n        // Redirect to portfolio page\n        navigate(\"/portfolio\");\n\n      } else {\n        alert(\"Incorrect username or password\");\n      }\n    })\n  }\n\n  // Guest login\n  function loginAsGuest() {\n    setUsername(\"Guest\")\n    setPassword(\"hunter2\")\n    verifyUser();\n  }\n\n  // Register a new user\n  function addUser() {\n    let username = prompt(\"Enter name\")\n    let hash_password = prompt(\"Enter password\");\n    let cash = prompt(\"Enter cash\")\n    fetch('/api/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ username, hash_password, cash })\n    })\n      .then(data => {\n        alert(data);\n        getUser();\n      })\n  }\n\n  return (\n    <div className=\"LoginPage\">\n      <Form>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Username\"\n            onChange={(e) => setUsername(e.target.value)} />\n          <Form.Text className=\"text-muted\">\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={(e) => setPassword(e.target.value)} />\n        </Form.Group>\n        <ButtonGroup>\n          <Button\n          variant=\"primary\"\n          // type=\"submit\"\n          onClick = {verifyUser}>\n            Submit\n       </Button>\n          <Button \n          variant=\"info\"\n          onClick = {loginAsGuest}>\n            Guest mode\n       </Button>\n        </ButtonGroup>\n      </Form>\n    </div>\n  );\n}\n\nexport { LoginPage };\n","/home/leungjch/Documents/uw/repos/paper-trader/client/src/pages/PortfolioPage.js",["50","51","52","53","54","55","56","57","58","59"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { Button, ButtonGroup, Form, Table } from 'react-bootstrap';\nimport { UserContext, UserProvider } from '../UserContext';\n\nfunction PortfolioPage() {\n\n    const [username, setUsername] = useState(\"\")\n    const [userId, setUserId] = useState(\"\")\n\n    const [authenticated, setAuthenticated] = useState(false)\n    const [portfolioData, setPortfolioData] = useState([])\n\n    const { user } = useContext(UserContext);\n\n\n    // Fetch portfolio data for user from DB\n    function getPortfolio() {\n        console.log(\"Portfolio request is\", \"/api/portfolio/\" + userId)\n        fetch('/api/portfolio/' + userId)\n            .then((response) => response.json())\n            .then((data) => {\n                console.log(\"Client: Loaded portfolio data\", data);\n                console.log(\"User info is, \", user)\n                setPortfolioData(data);\n            })\n    }\n\n    function renderPortfolioRow(item, index) {\n        return (\n            <tr key={index}>\n                <td>{item.ticker}</td>\n                <td>{item.n_holding}</td>\n                <td>${item.current_price}</td>\n                <td>${item.current_total}</td>\n            </tr>\n        )\n    }\n\n    useEffect(() => {\n        // Fetch portfolio data\n        getPortfolio()\n    }, []);\n\n    return (\n        <div>\n            <h2> Your Portfolio </h2>\n            <Table striped hover>\n                <thead>\n                    <tr>\n                        <th>Ticker</th>\n                        <th>Number of shares</th>\n                        <th>Current price</th>\n                        <th>Total value</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {portfolioData.map(renderPortfolioRow)}\n                </tbody>\n            </Table>\n        </div>\n    );\n}\n\nexport { PortfolioPage };\n","/home/leungjch/Documents/uw/repos/paper-trader/client/src/UserContext.js",[],"/home/leungjch/Documents/uw/repos/paper-trader/client/src/pages/HistoryPage.js",["60","61","62","63","64"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { Button, ButtonGroup, Form, Table } from 'react-bootstrap';\nimport { UserContext, UserProvider } from '../UserContext';\n\nfunction HistoryPage() {\n\n    const [historyData, setHistoryData] = useState([])\n    const { user } = useContext(UserContext);\n\n    // Fetch portfolio data for user from DB\n    function getHistory() {\n        console.log()\n        console.log(\"History request is\", \"/api/history/\" + user.id)\n        fetch('/api/history/' + user.id)\n            .then((response) => response.json())\n            .then((data) => {\n                console.log(\"Client: Loaded history data\", data);\n                setHistoryData(data);\n            })\n    }\n\n    function renderHistoryRow(item, index) {\n        return (\n          <tr key={index}>\n            <td>{item.ticker}</td>\n            <td>{item.trade_type}</td>\n            <td>{item.trade_n}</td>\n            <td>{item.price}</td>\n            <td>{item.date}</td>\n          </tr>\n        )\n      }\n\n    useEffect(() => {\n        // Fetch portfolio data\n        getHistory()\n    }, []);\n\n    return (\n        <div>\n            <h2> Transaction History </h2>\n\n            <Table striped hover>\n                <thead>\n                    <tr>\n                        <th>Ticker</th>\n                        <th>Action</th>\n                        <th>Number of shares</th>\n                        <th>Price</th>\n                        <th>Date</th>\n\n                    </tr>\n                </thead>\n                <tbody>\n                    {historyData.map(renderHistoryRow)}\n                </tbody>\n            </Table>\n        </div>\n    );\n}\n\nexport { HistoryPage };\n",["65","66"],"/home/leungjch/Documents/uw/repos/paper-trader/client/src/pages/BuyPage.js",["67","68"],"import React, { useState, useEffect } from \"react\";\nimport { Button, ButtonGroup, Form, Table } from 'react-bootstrap';\n\nfunction BuyPage() {\n\n    const [requestTicker, setRequestTicker] = useState(\"\")\n\n    function getQuote() {\n        console.log(\"User request is\", \"/api/search/\" + requestTicker)\n        fetch('/api/search/' + requestTicker)\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(\"Client: Received stock data\", data);\n\n        })\n      }\n    \n\n    return (\n    <div>\n        <Form>\n            <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter Ticker (TSLA, WMT, GOOG...)\"\n                    onChange={(e) => setRequestTicker(e.target.value)} />\n                <Form.Text className=\"text-muted\">\n                </Form.Text>\n            </Form.Group>\n            <ButtonGroup>\n                <Button\n                    variant=\"primary\"\n                    // type=\"submit\"\n                    onClick={getQuote}>\n                    Request Quote\n                </Button>\n            </ButtonGroup>\n        </Form>\n\n    </div>\n    );\n}\n\nexport { BuyPage }",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":2,"column":10,"nodeType":"75","messageId":"76","endLine":2,"endColumn":16},{"ruleId":"73","severity":1,"message":"77","line":2,"column":18,"nodeType":"75","messageId":"76","endLine":2,"endColumn":22},{"ruleId":"73","severity":1,"message":"78","line":20,"column":11,"nodeType":"75","messageId":"76","endLine":20,"endColumn":15},{"ruleId":"73","severity":1,"message":"79","line":3,"column":23,"nodeType":"75","messageId":"76","endLine":3,"endColumn":34},{"ruleId":"80","severity":1,"message":"81","line":32,"column":23,"nodeType":"82","messageId":"83","endLine":32,"endColumn":25},{"ruleId":"80","severity":1,"message":"81","line":32,"column":56,"nodeType":"82","messageId":"83","endLine":32,"endColumn":58},{"ruleId":"73","severity":1,"message":"84","line":55,"column":12,"nodeType":"75","messageId":"76","endLine":55,"endColumn":19},{"ruleId":"73","severity":1,"message":"74","line":2,"column":10,"nodeType":"75","messageId":"76","endLine":2,"endColumn":16},{"ruleId":"73","severity":1,"message":"85","line":2,"column":18,"nodeType":"75","messageId":"76","endLine":2,"endColumn":29},{"ruleId":"73","severity":1,"message":"77","line":2,"column":31,"nodeType":"75","messageId":"76","endLine":2,"endColumn":35},{"ruleId":"73","severity":1,"message":"86","line":3,"column":23,"nodeType":"75","messageId":"76","endLine":3,"endColumn":35},{"ruleId":"73","severity":1,"message":"87","line":7,"column":12,"nodeType":"75","messageId":"76","endLine":7,"endColumn":20},{"ruleId":"73","severity":1,"message":"88","line":7,"column":22,"nodeType":"75","messageId":"76","endLine":7,"endColumn":33},{"ruleId":"73","severity":1,"message":"89","line":8,"column":20,"nodeType":"75","messageId":"76","endLine":8,"endColumn":29},{"ruleId":"73","severity":1,"message":"90","line":10,"column":12,"nodeType":"75","messageId":"76","endLine":10,"endColumn":25},{"ruleId":"73","severity":1,"message":"91","line":10,"column":27,"nodeType":"75","messageId":"76","endLine":10,"endColumn":43},{"ruleId":"92","severity":1,"message":"93","line":42,"column":8,"nodeType":"94","endLine":42,"endColumn":10,"suggestions":"95"},{"ruleId":"73","severity":1,"message":"74","line":2,"column":10,"nodeType":"75","messageId":"76","endLine":2,"endColumn":16},{"ruleId":"73","severity":1,"message":"85","line":2,"column":18,"nodeType":"75","messageId":"76","endLine":2,"endColumn":29},{"ruleId":"73","severity":1,"message":"77","line":2,"column":31,"nodeType":"75","messageId":"76","endLine":2,"endColumn":35},{"ruleId":"73","severity":1,"message":"86","line":3,"column":23,"nodeType":"75","messageId":"76","endLine":3,"endColumn":35},{"ruleId":"92","severity":1,"message":"96","line":37,"column":8,"nodeType":"94","endLine":37,"endColumn":10,"suggestions":"97"},{"ruleId":"69","replacedBy":"98"},{"ruleId":"71","replacedBy":"99"},{"ruleId":"73","severity":1,"message":"100","line":1,"column":27,"nodeType":"75","messageId":"76","endLine":1,"endColumn":36},{"ruleId":"73","severity":1,"message":"101","line":2,"column":37,"nodeType":"75","messageId":"76","endLine":2,"endColumn":42},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'user' is assigned a value but never used.","'useLocation' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'addUser' is defined but never used.","'ButtonGroup' is defined but never used.","'UserProvider' is defined but never used.","'username' is assigned a value but never used.","'setUsername' is assigned a value but never used.","'setUserId' is assigned a value but never used.","'authenticated' is assigned a value but never used.","'setAuthenticated' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPortfolio'. Either include it or remove the dependency array.","ArrayExpression",["104"],"React Hook useEffect has a missing dependency: 'getHistory'. Either include it or remove the dependency array.",["105"],["102"],["103"],"'useEffect' is defined but never used.","'Table' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"Update the dependencies array to be: [getPortfolio]",{"range":"110","text":"111"},"Update the dependencies array to be: [getHistory]",{"range":"112","text":"113"},[1323,1325],"[getPortfolio]",[1114,1116],"[getHistory]"]