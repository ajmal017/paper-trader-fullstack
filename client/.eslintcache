[{"/home/leungjch/Documents/uw/repos/paper-trader/client/src/index.js":"1","/home/leungjch/Documents/uw/repos/paper-trader/client/src/App.js":"2","/home/leungjch/Documents/uw/repos/paper-trader/client/src/reportWebVitals.js":"3","/home/leungjch/Documents/uw/repos/paper-trader/client/src/pages/LoginPage.js":"4","/home/leungjch/Documents/uw/repos/paper-trader/client/src/pages/PortfolioPage.js":"5"},{"size":500,"mtime":1608867010145,"results":"6","hashOfConfig":"7"},{"size":1590,"mtime":1608967305921,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1608867010145,"results":"9","hashOfConfig":"7"},{"size":2986,"mtime":1608966026125,"results":"10","hashOfConfig":"7"},{"size":1981,"mtime":1608966301000,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"pb2wml",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/leungjch/Documents/uw/repos/paper-trader/client/src/index.js",[],["24","25"],"/home/leungjch/Documents/uw/repos/paper-trader/client/src/App.js",["26","27"],"/home/leungjch/Documents/uw/repos/paper-trader/client/src/reportWebVitals.js",[],"/home/leungjch/Documents/uw/repos/paper-trader/client/src/pages/LoginPage.js",["28","29","30","31","32","33","34","35"],"import React, { useState } from \"react\";\nimport { Button, ButtonGroup, Form } from 'react-bootstrap';\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nfunction LoginPage() {\n\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [userId, setUserId] = useState(\"\")\n  const [authenticated, setAuthenticated] = useState(false)\n  \n    // Router navigator\n  const navigate = useNavigate();\n\n\n  function getUser() {\n    console.log(\"Client: Getuser request\");\n    fetch('/api/users')\n      .then((response) => response.json())\n      .then((data) => console.log(\"Client: Received getuser data\", data));\n  }\n\n  // Logic for handling authentication\n  function verifyUser() {\n    console.log(\"User request is\", \"/api/users/\" + username)\n    fetch('/api/users/' + username)\n    .then((response) => response.json())\n    .then((data) => {\n      console.log(\"Client: Received request data\", data);\n      // Usernames must be unique\n      if (data.length == 1 && data[0]['hash_password'] == password) {\n\n        // User is authenticated\n        console.log(\"User authenticated!\")\n        setAuthenticated(true);\n\n        // Redirect to portfolio page\n        navigate(\n          \"/portfolio\", \n          { state: {username: username, userId: data[0]['id']}}\n        );\n\n      } else {\n        alert(\"Incorrect username or password\");\n      }\n      \n      \n    })\n\n  }\n\n  function loginAsGuest() {\n    setUsername(\"Guest\")\n    setPassword(\"hunter2\")\n    verifyUser();\n  }\n\n  function addUser() {\n    let username = prompt(\"Enter name\")\n    let hash_password = prompt(\"Enter password\");\n    let cash = prompt(\"Enter cash\")\n    fetch('/api/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ username, hash_password, cash })\n    })\n      .then(data => {\n        alert(data);\n        getUser();\n      })\n  }\n\n  function verifyLogin() {\n      \n  }\n\n\n  return (\n    <div className=\"LoginPage\">\n      <Form>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Username\"\n            onChange={(e) => setUsername(e.target.value)} />\n          <Form.Text className=\"text-muted\">\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={(e) => setPassword(e.target.value)} />\n        </Form.Group>\n        <ButtonGroup>\n          <Button\n          variant=\"primary\"\n          // type=\"submit\"\n          onClick = {verifyUser}>\n            Submit\n       </Button>\n          <Button \n          variant=\"info\"\n          onClick = {loginAsGuest}>\n            Guest mode\n       </Button>\n\n        </ButtonGroup>\n\n      </Form>\n    </div>\n  );\n}\n\nexport { LoginPage };\n","/home/leungjch/Documents/uw/repos/paper-trader/client/src/pages/PortfolioPage.js",["36","37","38","39","40","41","42","43"],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":2,"column":10,"nodeType":"50","messageId":"51","endLine":2,"endColumn":16},{"ruleId":"48","severity":1,"message":"52","line":2,"column":18,"nodeType":"50","messageId":"51","endLine":2,"endColumn":22},{"ruleId":"48","severity":1,"message":"53","line":3,"column":23,"nodeType":"50","messageId":"51","endLine":3,"endColumn":34},{"ruleId":"48","severity":1,"message":"54","line":9,"column":10,"nodeType":"50","messageId":"51","endLine":9,"endColumn":16},{"ruleId":"48","severity":1,"message":"55","line":9,"column":18,"nodeType":"50","messageId":"51","endLine":9,"endColumn":27},{"ruleId":"48","severity":1,"message":"56","line":10,"column":10,"nodeType":"50","messageId":"51","endLine":10,"endColumn":23},{"ruleId":"57","severity":1,"message":"58","line":31,"column":23,"nodeType":"59","messageId":"60","endLine":31,"endColumn":25},{"ruleId":"57","severity":1,"message":"58","line":31,"column":56,"nodeType":"59","messageId":"60","endLine":31,"endColumn":58},{"ruleId":"48","severity":1,"message":"61","line":58,"column":12,"nodeType":"50","messageId":"51","endLine":58,"endColumn":19},{"ruleId":"48","severity":1,"message":"62","line":75,"column":12,"nodeType":"50","messageId":"51","endLine":75,"endColumn":23},{"ruleId":"48","severity":1,"message":"49","line":2,"column":10,"nodeType":"50","messageId":"51","endLine":2,"endColumn":16},{"ruleId":"48","severity":1,"message":"63","line":2,"column":18,"nodeType":"50","messageId":"51","endLine":2,"endColumn":29},{"ruleId":"48","severity":1,"message":"52","line":2,"column":31,"nodeType":"50","messageId":"51","endLine":2,"endColumn":35},{"ruleId":"48","severity":1,"message":"64","line":9,"column":12,"nodeType":"50","messageId":"51","endLine":9,"endColumn":20},{"ruleId":"48","severity":1,"message":"56","line":12,"column":12,"nodeType":"50","messageId":"51","endLine":12,"endColumn":25},{"ruleId":"48","severity":1,"message":"65","line":12,"column":27,"nodeType":"50","messageId":"51","endLine":12,"endColumn":43},{"ruleId":"48","severity":1,"message":"66","line":15,"column":11,"nodeType":"50","messageId":"51","endLine":15,"endColumn":19},{"ruleId":"67","severity":1,"message":"68","line":46,"column":8,"nodeType":"69","endLine":46,"endColumn":10,"suggestions":"70"},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'useLocation' is defined but never used.","'userId' is assigned a value but never used.","'setUserId' is assigned a value but never used.","'authenticated' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'addUser' is defined but never used.","'verifyLogin' is defined but never used.","'ButtonGroup' is defined but never used.","'username' is assigned a value but never used.","'setAuthenticated' is assigned a value but never used.","'navigate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getPortfolio', 'state.mUserId', and 'state.mUserName'. Either include them or remove the dependency array.","ArrayExpression",["73"],"no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},"Update the dependencies array to be: [getPortfolio, state.mUserId, state.mUserName]",{"range":"76","text":"77"},[1412,1414],"[getPortfolio, state.mUserId, state.mUserName]"]